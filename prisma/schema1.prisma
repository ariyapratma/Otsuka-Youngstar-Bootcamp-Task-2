generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/db1"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mst_application {
  id                  Int       @id @default(autoincrement())
  application_name    String?   @db.VarChar(255)
  group_id_technician String?   @db.VarChar(255)
  entity_id           Int?
  department_code     String?   @db.VarChar(255)
  is_deleted          Boolean?  @default(false)
  created_at          DateTime? @default(now()) @db.DateTime(0)
  created_by          String?   @db.VarChar(255)
}

model mst_application_version {
  id             Int       @id @default(autoincrement())
  application_id Int?
  version        String?   @db.VarChar(255)
  content        String?   @db.VarChar(255)
  golive_date    DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mst_authorization {
  id               Int           @id @default(autoincrement())
  employee_code    String?       @db.VarChar(255)
  is_active        String?       @db.VarChar(1)
  created_at       DateTime?     @default(now()) @db.DateTime(0)
  created_by       String?       @db.VarChar(255)
  technician_level String?       @db.VarChar(255)
  active_profile   Int?
  active_entities  Int?
  mst_entities     mst_entities? @relation(fields: [active_entities], references: [id], onDelete: Cascade, map: "fk_entities")
  mst_profile      mst_profile?  @relation(fields: [active_profile], references: [id], onDelete: Cascade, map: "fk_profile")

  @@index([active_entities], map: "fk_entities")
  @@index([active_profile], map: "fk_profile")
}

model mst_authorization_profile {
  id            Int          @id @default(autoincrement())
  employee_code String?      @db.VarChar(255)
  profile_id    Int?
  entities_id   Int?
  created_at    DateTime?    @db.DateTime(0)
  created_by    String?      @db.VarChar(255)
  mst_profile   mst_profile? @relation(fields: [profile_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "mst_authorization_profile_ibfk_1")

  @@index([profile_id], map: "profile_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mst_authorization_usergroup {
  id            Int        @id @default(autoincrement())
  employee_code String?    @db.VarChar(20)
  group_id      Int?
  is_manager    String?    @db.VarChar(10)
  created_at    DateTime?  @db.DateTime(0)
  created_by    String?    @db.VarChar(255)
  mst_group     mst_group? @relation(fields: [group_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "mst_authorization_usergroup_ibfk_1")

  @@index([group_id], map: "group_id")
}

model mst_entities {
  id                Int                 @id @default(autoincrement())
  entities_name     String?             @db.VarChar(255)
  parent_id         Int?
  created_at        DateTime?           @db.DateTime(0)
  created_by        String?             @db.VarChar(50)
  mst_authorization mst_authorization[]
}

model mst_group {
  id                          Int                           @id @default(autoincrement())
  entities_id                 Int?
  group_name                  String?                       @db.VarChar(255)
  parent_id                   Int?
  is_deleted                  Boolean?                      @default(false)
  created_at                  DateTime?                     @default(now()) @db.DateTime(0)
  created_by                  String?                       @db.VarChar(255)
  mst_authorization_usergroup mst_authorization_usergroup[]
}

model mst_manpower_cost {
  id               Int       @id @default(autoincrement())
  technician_level String?   @db.VarChar(255)
  hourly           String?   @db.VarChar(255)
  monthly          String?   @db.VarChar(255)
  created_at       DateTime? @db.DateTime(0)
  created_by       String?   @db.VarChar(255)
}

model mst_profile {
  id                        Int                         @id @default(autoincrement())
  profile_name              String?                     @db.VarChar(255)
  is_deleted                Boolean?                    @default(false)
  created_at                DateTime?                   @default(now()) @db.DateTime(0)
  created_by                String?                     @db.VarChar(255)
  mst_authorization         mst_authorization[]
  mst_authorization_profile mst_authorization_profile[]
}

model tr_document {
  id         Int       @id @default(autoincrement())
  type       String?   @db.VarChar(11)
  type_id    Int?
  name       String?   @db.VarChar(255)
  filename   String?   @db.VarChar(255)
  filepath   String?   @db.VarChar(255)
  mime       String?   @db.VarChar(255)
  is_deleted String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.DateTime(0)
  created_by String?   @db.VarChar(255)

  @@index([type, type_id], map: "Type & Type ID")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tr_history {
  id          Int       @id @default(autoincrement())
  type        String?   @db.VarChar(255)
  type_id     Int?
  action      String?   @db.VarChar(255)
  document_id Int?
  created_at  DateTime? @db.DateTime(0)
  created_by  String?   @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tr_project {
  id                Int       @id
  request_id        Int?
  application_id    Int?
  project_code      String?   @db.VarChar(255)
  background        String?   @db.VarChar(255)
  issue_description String?   @db.VarChar(255)
  business_impact   String?   @db.VarChar(255)
  group_id          Int?
  plan_start_date   DateTime? @db.DateTime(0)
  plant_end_date    DateTime? @db.DateTime(0)
  real_start_date   DateTime? @db.DateTime(0)
  real_end_date     DateTime? @db.DateTime(0)
  percent_done      String?   @db.VarChar(255)
  auto_percent_done String?   @db.VarChar(255)
  status            String?   @db.VarChar(255)
  is_deleted        String?   @db.VarChar(255)
  created_at        DateTime? @db.DateTime(0)
  created_by        String?   @db.VarChar(255)
}

model tr_project_activity {
  id            Int       @id @default(autoincrement())
  project_id    Int?
  activity_name String?   @db.VarChar(255)
  date          DateTime? @db.DateTime(0)
  content       String?   @db.VarChar(255)
  document      String?   @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  created_by    String?   @db.VarChar(255)
}

model tr_project_overview {
  id                  Int       @id @default(autoincrement())
  project_id          Int?
  purpose             String?   @db.VarChar(255)
  goals               String?   @db.VarChar(255)
  success_measurement String?   @db.VarChar(255)
  intangible_benefit  String?   @map("intangible benefit") @db.VarChar(255)
  impact_of_not_doing String?   @db.VarChar(255)
  created_at          DateTime? @db.DateTime(0)
  created_by          String?   @db.VarChar(255)
}

model tr_project_participant {
  id            Int       @id @default(autoincrement())
  project_id    Int?
  employee_code String?   @db.VarChar(10)
  role          String?   @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  created_by    String?   @db.VarChar(255)
}

model tr_project_risk_mitigation {
  id            Int       @id
  project_id    Int?
  risk          String?   @db.VarChar(255)
  point_control String?   @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  created_by    String?   @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tr_project_scope {
  id          Int     @id @default(autoincrement())
  project_id  Int?
  features    String? @db.VarChar(255)
  description String? @db.VarChar(255)
  type        String? @db.VarChar(255)
  created_at  String? @db.VarChar(255)
  created_by  String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tr_project_task {
  id               Int       @id @default(autoincrement())
  project_id       Int?
  task_name        String?   @db.VarChar(255)
  content          String?   @db.VarChar(255)
  plan_start_date  DateTime? @db.DateTime(0)
  plan_end_date    DateTime? @db.DateTime(0)
  real_start_date  DateTime? @db.DateTime(0)
  real_end_date    DateTime? @db.DateTime(0)
  planned_duration String?   @db.VarChar(255)
  real_duration    String?   @db.VarChar(255)
  percent_done     String?   @db.VarChar(255)
  cost             Decimal?  @db.Decimal(10, 2)
  task_type        String?   @db.VarChar(255)
  created_at       DateTime? @db.DateTime(0)
  created_by       String?   @db.VarChar(255)
  task_category    String?   @db.VarChar(255)
}

model tr_project_team {
  id            Int       @id
  project_id    Int?
  employee_code String?   @db.VarChar(10)
  created_at    DateTime? @db.DateTime(0)
  created_by    String?   @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tr_request {
  id                       Int                     @id @default(autoincrement())
  entities_id              Int?
  ticket_name              String?                 @db.VarChar(255)
  creation_date            DateTime?               @db.Date
  closed_date              DateTime?               @db.Date
  creator                  String?                 @db.VarChar(255)
  status                   String?                 @db.VarChar(255)
  urgency                  String?                 @db.VarChar(255)
  expected_completion_date DateTime?               @db.Date
  category                 String?                 @db.VarChar(255)
  type                     String?                 @db.VarChar(255)
  description              String?                 @db.VarChar(255)
  department_code          String?                 @db.VarChar(255)
  is_project               String?                 @db.VarChar(255)
  created_at               DateTime?               @db.DateTime(0)
  created_by               String?                 @db.VarChar(255)
  tr_request_validation    tr_request_validation[]
}

model tr_request_validation {
  id                 Int         @id @default(autoincrement())
  request_id         Int?
  user_id            String?     @db.VarChar(255)
  user_id_validate   String?     @db.VarChar(255)
  comment_submission String?     @db.VarChar(255)
  comment_validation String?     @db.VarChar(255)
  status             String?     @db.VarChar(255)
  submission_date    DateTime?   @db.DateTime(0)
  validation_date    DateTime?   @db.DateTime(0)
  tr_request         tr_request? @relation(fields: [request_id], references: [id], onUpdate: SetNull, map: "FK_REQUEST")

  @@index([request_id], map: "FK_REQUEST")
}
